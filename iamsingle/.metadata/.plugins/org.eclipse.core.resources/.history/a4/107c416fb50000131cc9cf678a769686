package shaotian.android.iamsingle.async;

import org.json.JSONException;
import org.json.JSONObject;

import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;

import shaotian.android.iamsingle.MapActivity;
import shaotian.android.iamsingle.UIShared.SharedUtil;
import shaotian.android.iamsingle.netsdk.AuthManager;
import shaotian.android.iamsingle.netsdk.LocationCommunicator;
import shaotian.android.iamsingle.netsdk.UserProfileManager;
import shaotian.android.iamsingle.netsdk.util.LocationList;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.location.Location;
import android.os.AsyncTask;
import android.os.Bundle;
import android.widget.Toast;


public class AsyncUserInfo extends AsyncTask<Void, Void, byte[]> {
	 //Async classes 
  
		public  enum RESOURCE_TYPE{
			USERIMG
		}

	
		private Context context;
		private String email,pwd;
		private RESOURCE_TYPE resType;
    	public AsyncUserInfo(RESOURCE_TYPE action,Context context, String email,String pwd)
    	{
    		this.resType=action;
    		this.email=email;
    		this.pwd=pwd;
    		this.context=context;
    	
    		
    	}
    	
		@Override
		protected byte[] doInBackground(Void... params) {
			ApplicationInfo ai;
			LocationList ret=null;
			try {
				ai = context.getPackageManager().getApplicationInfo(context.getPackageName(), PackageManager.GET_META_DATA);
				Bundle bundle = ai.metaData;

				UserProfileManager um=new UserProfileManager(bundle.getString("wsserverip"));
				switch(resType)
				{
				case USERIMG:	return um.GetUserImage(29);
							
				default:	return null;
				
				}
				
				
			} catch (NameNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return null;
		}      

		@Override
		protected void onPostExecute(byte[] result) {
			super.onPostExecute(result);
			
			
		}
  
}
