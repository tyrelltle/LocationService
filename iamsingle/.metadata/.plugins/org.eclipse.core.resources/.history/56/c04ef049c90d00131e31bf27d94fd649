package shaotian.android.iamsingle.socketsdk;

import static org.junit.Assert.assertEquals;

import java.io.IOException;
import java.util.Hashtable;

import shaotian.android.iamsingle.netsdk.model.MessageHistory;

public class MessageManager extends NetManager{

	private static MessageManager instance=null;
	private Hashtable<Integer, MessageHistory> mHistories=new Hashtable<Integer, MessageHistory>();
	private int senderid=0;
	public void sendMessage(int uid, String msg)
	{
		this.mProvider.send(msg);
		senderid=uid;
		
	}

	public MessageHistory getMessageHistory(int i) {
		
		return mHistories.get(i);
	}
	
	
	
	
	
	
	private MessageManager(INetProvider provider) {
		super(provider);
	}

	public static synchronized  MessageManager initialize(INetProvider provider)
	{
		if(instance!=null)
			throw new IllegalStateException("MessageManager already initialized");
		instance=new MessageManager(provider);
		return instance;
		
	}
	
	public static synchronized  MessageManager instance()
	{
		if(instance==null)
			throw new IllegalStateException("MessageManager not been initialized yet");
		return instance;
	}

	public void registerToServer(int sender) throws IOException {
		mProvider.send("reg "+senderid);
	    if(!("ack".equals(mProvider.receive())));
			throw new IllegalStateException("server not acked after sender 'reg' ");
	}
	
	public void unRegister() throws IOException {
		mProvider.disconnect();
	    
	}
	
}
