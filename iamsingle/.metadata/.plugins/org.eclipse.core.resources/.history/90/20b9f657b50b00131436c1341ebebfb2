package ChatTest;
import static org.junit.Assert.*;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.Socket;
import java.util.ArrayList;

import org.junit.Test;

/*
 * two threads: sender and reciever
 * sender sends 100 messages to reciever
 * reciever recieve messages and fill into recievedMsgList array
 * sender wait until recievedMsgList array.size=100
 * 
 * */
public class SenderTest extends AbstructChatTest{

	private static ArrayList<String> recievedMsgList=new ArrayList<String>();
	
	private static class ReceiverRun implements Runnable{

		@Override
		public void run() {
			for(int i=0;i<100;i++){
				recievedMsgList.add(String.valueOf(i));
			}
		}
		
		
	}

	private static class SenderRun implements Runnable{

		@Override
		public void run() {
			while(true)
			{
				synchronized (recievedMsgList){
					if(recievedMsgList.size()==100)
						break;
				}
			}
		}
		
		
	}
	@Test
	public void senderAckTest() throws IOException {
		InetAddress serverAddr = InetAddress.getByName("192.168.0.11");
		Socket socket = new Socket(InetAddress.getLocalHost().getHostName(), 12000);
	
		PrintWriter out=out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())), true);
		BufferedReader input = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		String ret=null;
		
		//register
		send("reg 29", out);
		assertEquals("ack",this.recieve(input));
		
	
		for(int i=0;i<100;i++)
		{ 
			send("msg "+i, out);
		    assertEquals("ack",recieve(input));
		}  

		socket.close();
		
		
	}
	
	@Test
	public void senderRecieverTest()
	{
		new Thread(){

			@Override
			public void run() {
				
				super.run();
				assertTrue(false);
			}}.start();
	}
}
