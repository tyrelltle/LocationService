package shaotian.android.iamsingle.test;

import static org.junit.Assert.*;

import java.util.Date;

import org.junit.Test;

import shaotian.android.iamsingle.UIShared.MapMarkerManager;
import shaotian.android.iamsingle.UIShared.MapMarkerManager.MapMarkerInvalidStateException;
import shaotian.android.iamsingle.UIShared.MapMarkerManager.TimedMarker;
import android.util.Log;

import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.Marker;
import com.google.android.gms.maps.model.MarkerOptions;

public class TimedMarkerManagerTest {

	
	
	private class TimedMarkerStub extends TimedMarker	
	{

		public TimedMarkerStub(MapMarkerManager mapMarkerManager, Marker m) {
			mapMarkerManager.super(m);
			// TODO Auto-generated constructor stub
		}

		@Override
		public boolean timeout() {
			// TODO Auto-generated method stub
			if(super.time==null)
				return false;
			return (new Date().getTime())-time.getTime()>0;
		}
		
	
	
	}
	
/*
 * initialize: put 6 markers into mgr
 * test: update 3 markers. 
 * 
 * 
 * 
 * */
	@Test
	public void test() {
		try{
			MapMarkerManager mgn=MapMarkerManager.Instance();

			mgn.start();
			for(int i=0;i<lis.size();i++)
			{
				shaotian.android.iamsingle.netsdk.model.Location loc=lis.lis.get(i);
				
			    int uid=loc.userid;
			    Marker m=null;
			    
			    if(!mgn.contains(uid))
				{	
			    	m=mMap.addMarker(new MarkerOptions()
				        		.position(new LatLng(loc.latitude, loc.longtitude))
				        		.title(loc.uname));
			    	
			    	setMarkerGender(loc.gender,m);
			    	mgn.addMarker(uid, m);
				}
			    else
			    {	//only update changed location
			    	LatLng newlatlng=new LatLng(loc.latitude, loc.longtitude);
			    	mgn.updateMarker(uid, newlatlng);
			    	
			    	
			    }
			}
			mgn.finish();
			Log.d("app log", "end update marker loop");

		}catch(MapMarkerInvalidStateException e)
		{
		}
	}

}
